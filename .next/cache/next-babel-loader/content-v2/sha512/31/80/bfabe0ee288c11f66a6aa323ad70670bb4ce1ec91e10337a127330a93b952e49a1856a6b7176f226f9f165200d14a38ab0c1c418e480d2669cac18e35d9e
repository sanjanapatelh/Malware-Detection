{"ast":null,"code":"import _regeneratorRuntime from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/pages/campaigns/show.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/malware';\nimport web3 from '../../ethereum/web3'; //import ContributeForm from '../../components/ContributeForm';\n\nimport { Link } from '../../routes';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          address = _this$props.address,\n          prob = _this$props.prob,\n          deployedUser = _this$props.deployedUser,\n          MalwareHash = _this$props.MalwareHash,\n          amount = _this$props.amount,\n          perCentMalware = _this$props.perCentMalware;\n      var items = [{\n        header: deployedUser,\n        meta: 'Address of User',\n        description: 'The user uploaded this malware.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: amount,\n        meta: 'Amount(wei)',\n        description: 'This amount offered by user for getting files checked.'\n      }, {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description: 'The sha256 hash for this malware'\n      }, {\n        header: perCentMalware,\n        meta: 'Percent of malware',\n        description: 'Percent of malware detected after nodes report'\n      }, {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description: 'The sha256 hash for this malware'\n      }];\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Malware Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 10,\n              children: this.renderCards()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Column, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  addedAddress: summary[0],\n                  prob: summary[1],\n                  deployedUser: summary[2],\n                  MalwareHash: summary[3],\n                  amount: summary[4],\n                  perCentMalware: summary[5]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","Link","CampaignShow","props","address","prob","deployedUser","MalwareHash","amount","perCentMalware","items","header","meta","description","style","overflowWrap","renderCards","campaign","query","methods","getSummary","call","summary","addedAddress"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/malware';\nimport web3 from '../../ethereum/web3';\n//import ContributeForm from '../../components/ContributeForm';\nimport { Link } from '../../routes';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n\n    const summary = await campaign.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      addedAddress: summary[0],\n      prob: summary[1],\n      deployedUser: summary[2],\n      MalwareHash: summary[3],\n      amount: summary[4],\n      perCentMalware: summary[5]\n\n    };\n  }\n\n  renderCards() {\n    const {\n      address,\n      prob,\n      deployedUser,\n      MalwareHash,\n      amount,\n      perCentMalware\n\n    } = this.props;\n\n    const items = [\n      {\n        header: deployedUser,\n        meta: 'Address of User',\n        description:\n          'The user uploaded this malware.',\n        style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: amount,\n        meta: 'Amount(wei)',\n        description:\n          'This amount offered by user for getting files checked.'\n      },\n      {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description:\n          'The sha256 hash for this malware'\n      },\n      {\n        header: perCentMalware,\n        meta: 'Percent of malware',\n        description:\n          'Percent of malware detected after nodes report'\n      },\n      {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description:\n          'The sha256 hash for this malware'\n      }\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Malware Show</h3>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n\n            <Grid.Column width={6}>\n\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}