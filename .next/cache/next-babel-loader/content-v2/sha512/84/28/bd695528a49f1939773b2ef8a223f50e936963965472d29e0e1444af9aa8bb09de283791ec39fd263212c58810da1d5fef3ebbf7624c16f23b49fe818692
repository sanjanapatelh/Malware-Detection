{"ast":null,"code":"const {\n  Octokit\n} = require(\"@octokit/rest\");\n\nconst {\n  Base64\n} = require(\"js-base64\");\n\nconst fs = require(\"fs\");\n\nrequire(\"dotenv\").config();\n\nconst octokit = new Octokit({\n  auth: process.env.GITHUB_ACCESS_TOKEN\n});\n\nconst main2 = async str => {};\n\nexport default async function handler(req, res) {\n  //uncomment this\n  //   const router = useRouter()\n  //   const {path} = router.queryreturn(<div>{id}</div>)\n  //   const {data}=main1(path)\n  try {\n    const filename = req.body.hash; //assign as str\n\n    const {\n      data\n    } = await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {\n      owner: 'manjularachana',\n      repo: 'githubApiUsageToUploadDownload',\n      path: filename\n    });\n    console.log(data.html_url);\n    res.status(200).json(data.html_url);\n  } catch (err) {\n    console.error(err);\n  }\n}","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/MalwareDetection/pages/api/GetDownloadUrl.js"],"names":["Octokit","require","Base64","fs","config","octokit","auth","process","env","GITHUB_ACCESS_TOKEN","main2","str","handler","req","res","filename","body","hash","data","request","owner","repo","path","console","log","html_url","status","json","err","error"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,WAAD,CAA1B;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEA,MAAMC,OAAO,GAAG,IAAIL,OAAJ,CAAY;AAC1BM,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADQ,CAAZ,CAAhB;;AAGA,MAAMC,KAAK,GAAC,MAAMC,GAAN,IAAY,CAEvB,CAFD;;AAGA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AACvC;AAEA;AACA;AACA;AACA,MAAG;AACC,UAAMC,QAAQ,GAACF,GAAG,CAACG,IAAJ,CAASC,IAAxB,CADD,CAC6B;;AAC5B,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMb,OAAO,CAACc,OAAR,CAAgB,2CAAhB,EAA6D;AAC5EC,MAAAA,KAAK,EAAE,gBADqE;AAE5EC,MAAAA,IAAI,EAAE,gCAFsE;AAG5EC,MAAAA,IAAI,EAAEP;AAHsE,KAA7D,CAAnB;AAKEQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,QAAjB;AACAX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,IAAI,CAACO,QAA1B;AACD,GATL,CAUK,OAAOG,GAAP,EAAY;AACbL,IAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACC;AACF","sourcesContent":["const { Octokit } = require(\"@octokit/rest\")\nconst { Base64 } = require(\"js-base64\")\nconst fs = require(\"fs\")\n\nrequire(\"dotenv\").config()\n\nconst octokit = new Octokit({\n  auth: process.env.GITHUB_ACCESS_TOKEN,\n})\nconst main2=async(str)=>{\n\n}\nexport default async function handler(req, res){\n        //uncomment this\n\n        //   const router = useRouter()\n        //   const {path} = router.queryreturn(<div>{id}</div>)\n        //   const {data}=main1(path)\n        try{\n            const filename=req.body.hash//assign as str\n            const {data}=await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {\n                owner: 'manjularachana',\n                repo: 'githubApiUsageToUploadDownload',\n                path: filename\n              })\n              console.log(data.html_url)\n              res.status(200).json(data.html_url)\n            }\n             catch (err) {\n            console.error(err)\n            }\n          }\n"]},"metadata":{},"sourceType":"module"}